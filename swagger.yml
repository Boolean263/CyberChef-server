openapi: 3.0.0
info:
  title: CyberChef API
  description: Some API
  version: 1.0.0


paths:
  /operations:
    get:
      summary: List available operations
      description: >
        Retrieve a list of all available operations on this server.
        The return value is an object whose attributes are operation names,
        and each attribute value is the description of the arguments
        the argument takes.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                example: >
                    {
                       "FromBase64" : {
                          "alphabet" : {
                             "type" : "editableOption",
                             "options" : [
                                {
                                   "name" : "Standard (RFC 4648): A-Za-z0-9+/=",
                                   "value" : "A-Za-z0-9+/="
                                },
                                {
                                   "name" : "URL safe (RFC 4648 ยง5): A-Za-z0-9-_",
                                   "value" : "A-Za-z0-9-_"
                                },
                                [...]
                             ]
                          },
                          "removeNon-alphabetChars" : {
                             "type" : "boolean",
                             "value" : true
                          }
                       },
                       "ToBase64" : {
                          "alphabet" : {
                             "type" : "editableOption",
                             "options" : [
                                {
                                   "name" : "Standard (RFC 4648): A-Za-z0-9+/=",
                                   "value" : "A-Za-z0-9+/="
                                },
                                {
                                   "name" : "URL safe (RFC 4648 ยง5): A-Za-z0-9-_",
                                   "value" : "A-Za-z0-9-_"
                                },
                                [...]
                             ]
                          }
                       },
                       [...]
                    }

  /bake:
    post:
      summary: Bakes a recipe
      description: >
        Bake a recipe defined in JSON. For an example JSON recipe, build a recipe on 
        [CyberChef](https://gchq.github.io/CyberChef/) and click save. Select "clean JSON".
        

        The Recipe property in the payload is designed so that you only need to provide
        arguments for operations if they are required, or you want to change them from the default.
        For more information on accepted recipe formats, see the [bake section of the Node API docs](https://github.com/gchq/CyberChef/wiki/Node-API#bake)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/SingleOpRecipe"
                - $ref: "#/components/schemas/MultiOpRecipe"
            example:
              input: "some input"
              recipe:
                - op: toHex
                - op: toBase64
                - op: toBinary
                  args:
                    delimiter: "Comma"

      responses:
        '200':
          description: Recipe baked successfully
          content:
            application/json:
              schema:
                type: "string"
                example: "62 61 6b 65 20 73 6f 6d 65 74 68 69 6e 67"
        '400':
          description: Bad request

components:
  schemas:
    SingleOpRecipe:
      type: object
      properties:
        input:
          type: string
          example: "bake this"
        recipe:
          $ref: "#/components/schemas/Operation"
          example:
            op: "toHex"

    MultiOpRecipe:
      type: object
      properties:
        input: 
          type: string
          example: "input for recipe"
        recipe:
          type: array
          items:
            $ref: "#/components/schemas/Operation"
    Operation:
      type: object
      properties:
        op:
          type: string
          required: true
        args:
          oneOf:
            - $ref: "#/components/schemas/ArgArray"
            - $ref: "#/components/schemas/ArgObject"

    OperationArray:
      type: array
      items: 
        $ref: "#/components/schemas/Operation"
      
    ArgArray:
      type: array
      items:
        type: {}
      example: 
        - 16
        - true
        - false
    ArgObject:
      type: object
      additionalProperties: true
      example: 
        width: 16
        upperCaseHex: true
        includeFinalLength: false
 
